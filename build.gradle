buildscript {
  ext {
    grailsVersion = project.grailsVersion
  }
  repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://mvnrepository.com" }
    maven { url "https://plugins.gradle.org/m2/" }
    flatDir {
      dirs 'libs'
    }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
    classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.6"
    classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.3.4"
    classpath "com.bertramlabs.plugins:sass-asset-pipeline:3.3.4"
    classpath "org.grails.plugins:hibernate5:7.2.1"
    classpath "org.grails.plugins:database-migration:3.1.0"
    //classpath ('org.grails.plugins:export:2.0.0') {exclude group: 'com.lowagie'}
    classpath 'org.grails.plugins:views-gradle:2.1.2'
  }
}

version "0.1"
group "bookstore"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin: "com.bertramlabs.asset-pipeline"
apply plugin:"com.github.erdi.webdriver-binaries"
apply plugin:"maven-publish"




configurations {
  developmentOnly
  runtimeClasspath {
    extendsFrom developmentOnly
  }
}

ext {
  grailsVersion = project.grailsVersion
}

repositories {
  mavenLocal()

  maven { url "https://mvnrepository.com" }
  maven { url "https://repo.grails.org/grails/core" }
  flatDir {
    dirs 'libs'
  }
}

sourceSets {
  main {
    resources {
      srcDir 'grails-app/migrations'
    }
  }
}

dependencyManagement {
  imports {
    mavenBom "org.grails:grails-bom:$grailsVersion"
  }
  applyMavenExclusions false
}

dependencies {
  developmentOnly("org.springframework.boot:spring-boot-devtools")
  implementation "org.springframework.boot:spring-boot-starter-logging"
  implementation "org.springframework.boot:spring-boot-starter-validation"
  implementation "org.springframework.boot:spring-boot-autoconfigure"
  implementation "org.grails:grails-core"
  implementation "org.springframework.boot:spring-boot-starter-actuator"
//  providedCompile "org.springframework.boot:spring-boot-starter-tomcat"
  implementation "org.grails:grails-dependencies"
  implementation "org.grails:grails-web-boot"
  implementation "org.grails:grails-logging"
  implementation "org.grails.plugins:cache"
  implementation "org.grails.plugins:scaffolding"
  implementation "org.grails.plugins:hibernate5"
  implementation "org.hibernate:hibernate-core:5.6.3.Final"
  implementation "org.hibernate:hibernate-ehcache:5.4.18.Final"
  implementation "org.grails.plugins:gsp"
  compileOnly "io.micronaut:micronaut-inject-groovy"
  console "org.grails:grails-console"
  profile "org.grails.profiles:web"
  runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:3.3.4"
  runtimeOnly "org.codehaus.groovy:groovy-dateutil"
  runtimeOnly "com.bertramlabs.plugins:sass-asset-pipeline:3.3.4"
  implementation "com.bertramlabs.plugins:asset-pipeline-grails:3.3.4"

  runtimeOnly "com.h2database:h2"
  testImplementation "io.micronaut:micronaut-inject-groovy"
  testImplementation 'io.github.longwa:build-test-data:5.0.0'
  testImplementation "org.grails:grails-gorm-testing-support"
  testImplementation "org.mockito:mockito-core"
  testImplementation "org.grails:grails-web-testing-support"
  testImplementation "org.grails.plugins:geb"
  testImplementation "org.seleniumhq.selenium:selenium-remote-driver:4.0.0"
  testImplementation "org.seleniumhq.selenium:selenium-api:4.0.0"
  testImplementation "org.seleniumhq.selenium:selenium-support:4.0.0"
  testRuntimeOnly "org.seleniumhq.selenium:selenium-chrome-driver:4.0.0"
  testRuntimeOnly "org.seleniumhq.selenium:selenium-firefox-driver:4.0.0"

  implementation 'mysql:mysql-connector-java:8.0.22'
  implementation("org.quartz-scheduler:quartz:2.2.3") {
    exclude group: 'slf4j-api', module: 'c3p0'
  }
  implementation ('org.grails.plugins:quartz:2.0.13')
  //implementation 'se.su.it.tomcat:tomcat-header-encoding-valve:2.3'
  implementation "org.grails.plugins:database-migration:3.1.0"
  implementation 'org.liquibase:liquibase-core:3.6.3'
  //implementation 'org.grails.plugins:build-test-data:4.0.0'
  implementation 'org.apache.commons:commons-email:1.5'
  implementation 'org.xhtmlrenderer:flying-saucer-core:9.1.12'
  implementation 'org.xhtmlrenderer:flying-saucer-pdf:9.1.12'
  //Below is a special due to that 'org.grails.plugins:export:2.0.0' was removed from the repo
  //compile 'org.grails.plugins:export:2.0.0'
  implementation name: 'export-2.0.0'
  implementation group: 'jexcelapi', name: 'jxl', version: '2.6'
  implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'

  implementation 'org.ehcache:ehcache:3.2.3'
  implementation group: 'org.apache.abdera', name: 'abdera-client', version: '1.1.3'
  implementation group: 'org.json', name: 'json', version: '20160212'
  implementation group: 'org.imgscalr', name: 'imgscalr-lib', version: '4.2'
  implementation group: 'com.drewnoakes', name: 'metadata-extractor', version: '2.10.1'
  implementation group: 'org.jsoup', name: 'jsoup', version: '1.10.2'
  implementation "org.codehaus.gpars:gpars:1.2.1"
  implementation "org.apache.httpcomponents:httpclient:4.5.9"
  implementation group: 'org.aspectj', name: 'aspectjweaver'
  implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
}

assets {
  minifyJs = true
  minifyCss = true
  excludes = ['**/effects.js', '**/rico.js', '**/unittest.js']
}

war {
  enabled = true
  archiveName 'vfuportalen.war'
  classifier ''
}

bootRun {
  systemProperties = System.properties
  ignoreExitValue true
  jvmArgs(
          '-Dspring.output.ansi.enabled=always',
          '-noverify',
          '-server',
          '-XX:TieredStopAtLevel=1',
          '-Xms3072m',
          '-Xmx6144m',
          '-XX:+UseG1GC',
          '-XX:MaxGCPauseMillis=50',
          '-XX:GCPauseIntervalMillis=200')
  sourceResources sourceSets.main
  String springProfilesActive = 'spring.profiles.active'
  systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
  configure(groovyOptions) {
    forkOptions.jvmArgs = ['-Xmx1024m']
  }
}

tasks.withType(Test) {
  useJUnitPlatform()
}

webdriverBinaries {
  chromedriver '2.45.0'
  geckodriver '0.30.0'
}

tasks.withType(Test) {
  systemProperty "geb.env", System.getProperty('geb.env')
  systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
  systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
  systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}

